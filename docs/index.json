{
  "api/Hertzole.GoldPlayer.AudioItem.html": {
    "href": "api/Hertzole.GoldPlayer.AudioItem.html",
    "title": "Struct AudioItem | Gold Player",
    "keywords": "Struct AudioItem Used for easily playing audio clip(s) with parameters. Implements IEquatable < AudioItem > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax [Serializable] public struct AudioItem : IEquatable<AudioItem> Constructors | Improve this Doc View Source AudioItem(Boolean) Declaration public AudioItem(bool enabled) Parameters Type Name Description Boolean enabled | Improve this Doc View Source AudioItem(Boolean, Boolean, Single, Single, Single) Declaration public AudioItem(bool enabled, bool randomPitch, float pitch, float minPitch, float maxPitch) Parameters Type Name Description Boolean enabled Boolean randomPitch Single pitch Single minPitch Single maxPitch | Improve this Doc View Source AudioItem(Boolean, Boolean, Single, Single, Single, Boolean, Single) Declaration public AudioItem(bool enabled, bool randomPitch, float pitch, float minPitch, float maxPitch, bool changeVolume, float volume) Parameters Type Name Description Boolean enabled Boolean randomPitch Single pitch Single minPitch Single maxPitch Boolean changeVolume Single volume | Improve this Doc View Source AudioItem(Boolean, Boolean, Single, Single, Single, Boolean, Single, AudioClip) Declaration public AudioItem(bool enabled, bool randomPitch, float pitch, float minPitch, float maxPitch, bool changeVolume, float volume, AudioClip audioClip) Parameters Type Name Description Boolean enabled Boolean randomPitch Single pitch Single minPitch Single maxPitch Boolean changeVolume Single volume AudioClip audioClip | Improve this Doc View Source AudioItem(Boolean, Boolean, Single, Single, Single, Boolean, Single, AudioClip[]) Declaration public AudioItem(bool enabled, bool randomPitch, float pitch, float minPitch, float maxPitch, bool changeVolume, float volume, AudioClip[] audioClips) Parameters Type Name Description Boolean enabled Boolean randomPitch Single pitch Single minPitch Single maxPitch Boolean changeVolume Single volume AudioClip [] audioClips Properties | Improve this Doc View Source AudioClips All the audio clips. Declaration public AudioClip[] AudioClips { get; set; } Property Value Type Description AudioClip [] | Improve this Doc View Source ChangeVolume Determines if the volume should be changed when playing. Declaration public bool ChangeVolume { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Enabled Determines if this audio should be enabled. Declaration public bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaxPitch The maximum pitch the audio can play at. Declaration public float MaxPitch { get; set; } Property Value Type Description Single | Improve this Doc View Source MinPitch The minimum pitch the audio can play at. Declaration public float MinPitch { get; set; } Property Value Type Description Single | Improve this Doc View Source Pitch The pitch that the audio should play at. Declaration public float Pitch { get; set; } Property Value Type Description Single | Improve this Doc View Source RandomPitch Determines if the pitch should be randomized. Declaration public bool RandomPitch { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Volume The volume that should be set when playing. Declaration public float Volume { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source Equals(AudioItem) Declaration public bool Equals(AudioItem other) Parameters Type Name Description AudioItem other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Play(AudioSource) Plays a random audio clip at on a audio source and uses the settings set on the item. Declaration public void Play(AudioSource audioSource) Parameters Type Name Description AudioSource audioSource The source to play the sounds on. Operators | Improve this Doc View Source Equality(AudioItem, AudioItem) Declaration public static bool operator ==(AudioItem left, AudioItem right) Parameters Type Name Description AudioItem left AudioItem right Returns Type Description Boolean | Improve this Doc View Source Inequality(AudioItem, AudioItem) Declaration public static bool operator !=(AudioItem left, AudioItem right) Parameters Type Name Description AudioItem left AudioItem right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Hertzole.GoldPlayer.AudioTypes.html": {
    "href": "api/Hertzole.GoldPlayer.AudioTypes.html",
    "title": "Enum AudioTypes | Gold Player",
    "keywords": "Enum AudioTypes Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public enum AudioTypes Fields Name Description Custom Standard"
  },
  "api/Hertzole.GoldPlayer.BobClass.html": {
    "href": "api/Hertzole.GoldPlayer.BobClass.html",
    "title": "Class BobClass | Gold Player",
    "keywords": "Class BobClass Inheritance Object BobClass Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax [Serializable] public class BobClass Fields | Improve this Doc View Source bobCycle Declaration protected float bobCycle Field Value Type Description Single | Improve this Doc View Source bobFade Declaration protected float bobFade Field Value Type Description Single | Improve this Doc View Source springDampen Declaration protected float springDampen Field Value Type Description Single | Improve this Doc View Source springElastic Declaration protected float springElastic Field Value Type Description Single | Improve this Doc View Source springPos Declaration protected float springPos Field Value Type Description Single | Improve this Doc View Source springPositionThreshold Declaration protected float springPositionThreshold Field Value Type Description Single | Improve this Doc View Source springVelocity Declaration protected float springVelocity Field Value Type Description Single | Improve this Doc View Source springVelocityThreshold Declaration protected float springVelocityThreshold Field Value Type Description Single | Improve this Doc View Source zTilt Declaration protected float zTilt Field Value Type Description Single | Improve this Doc View Source zTiltVelocity Declaration protected float zTiltVelocity Field Value Type Description Single Properties | Improve this Doc View Source BobCycle Declaration public float BobCycle { get; } Property Value Type Description Single | Improve this Doc View Source BobFrequency Sets how frequent the bob happens. Declaration public float BobFrequency { get; set; } Property Value Type Description Single | Improve this Doc View Source BobHeight The height of the bob. Declaration public float BobHeight { get; set; } Property Value Type Description Single | Improve this Doc View Source BobTarget The object to bob. Declaration public Transform BobTarget { get; set; } Property Value Type Description Transform | Improve this Doc View Source EnableBob Determines if the bob effect should be enabled. Declaration public bool EnableBob { get; set; } Property Value Type Description Boolean | Improve this Doc View Source EnableStrafeTilting If enabled, the target will tilt when strafing. Declaration public bool EnableStrafeTilting { get; set; } Property Value Type Description Boolean | Improve this Doc View Source HeightMultiplier Adds extra movement to the bob height. Declaration public float HeightMultiplier { get; set; } Property Value Type Description Single | Improve this Doc View Source LandMove How much the target will move when landing. Declaration public float LandMove { get; set; } Property Value Type Description Single | Improve this Doc View Source LandTilt How much the target will tilt when landing. Declaration public float LandTilt { get; set; } Property Value Type Description Single | Improve this Doc View Source SideMovement How much the target will move to the sides. Declaration public float SideMovement { get; set; } Property Value Type Description Single | Improve this Doc View Source StrafeTilt How much the target will tilt when strafing. Declaration public float StrafeTilt { get; set; } Property Value Type Description Single | Improve this Doc View Source StrideMultiplier Multiplies the bob frequency speed. Declaration public float StrideMultiplier { get; set; } Property Value Type Description Single | Improve this Doc View Source SwayAngle How much the target will sway from side to side. Declaration public float SwayAngle { get; set; } Property Value Type Description Single | Improve this Doc View Source UnscaledTime If true, bobbing will use unscaled delta time. Declaration public bool UnscaledTime { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source DoBob(Vector3, Single, Single) Declaration public void DoBob(Vector3 velocity, float deltaTime, float zTiltAxis = 0F) Parameters Type Name Description Vector3 velocity Single deltaTime Single zTiltAxis | Improve this Doc View Source Initialize() Declaration public void Initialize()"
  },
  "api/Hertzole.GoldPlayer.CrouchToggleMode.html": {
    "href": "api/Hertzole.GoldPlayer.CrouchToggleMode.html",
    "title": "Enum CrouchToggleMode | Gold Player",
    "keywords": "Enum CrouchToggleMode Type of toggling mode for crouching. Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public enum CrouchToggleMode Fields Name Description Hold Toggle is off and crouch button must be held down to crouch. Toggle Crouching is permanently toggled. Player must press crouch button again to toggle off."
  },
  "api/Hertzole.GoldPlayer.FOVKickClass.html": {
    "href": "api/Hertzole.GoldPlayer.FOVKickClass.html",
    "title": "Class FOVKickClass | Gold Player",
    "keywords": "Class FOVKickClass Used to apply field of view (FOV) kick to a target camera. Inheritance Object PlayerModule FOVKickClass Inherited Members PlayerModule.PlayerController PlayerModule.CharacterController PlayerModule.PlayerTransform PlayerModule.PlayerInput PlayerModule.HasBeenInitialized PlayerModule.Initialize(IGoldInput) PlayerModule.OnFixedUpdate(Single) PlayerModule.OnLateUpdate(Single) PlayerModule.GetButton(String) PlayerModule.GetButtonDown(String) PlayerModule.GetButtonUp(String) PlayerModule.GetAxis(String) PlayerModule.GetAxisRaw(String) PlayerModule.GetVector2Input(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax [Serializable] public class FOVKickClass : PlayerModule Fields | Improve this Doc View Source newFOV Declaration protected float newFOV Field Value Type Description Single | Improve this Doc View Source originalFOV Declaration protected float originalFOV Field Value Type Description Single Properties | Improve this Doc View Source EnableFOVKick Determines if FOV kick should be enabled. Declaration public bool EnableFOVKick { get; set; } Property Value Type Description Boolean | Improve this Doc View Source KickAmount Sets how much the FOV will kick. Declaration public float KickAmount { get; set; } Property Value Type Description Single | Improve this Doc View Source KickWhen Sets whenever the FOV kick should kick in. Declaration public RunAction KickWhen { get; set; } Property Value Type Description RunAction | Improve this Doc View Source LerpTimeFrom Sets how fast the FOV will move back to the original FOV. Declaration public float LerpTimeFrom { get; set; } Property Value Type Description Single | Improve this Doc View Source LerpTimeTo Sets how fast the FOV will move to the new FOV. Declaration public float LerpTimeTo { get; set; } Property Value Type Description Single | Improve this Doc View Source TargetCamera The camera that the FOV kick should be applied to. Declaration public Camera TargetCamera { get; set; } Property Value Type Description Camera | Improve this Doc View Source TargetFieldOfView The new field of view with the original field of view with kick amount added. Declaration public float TargetFieldOfView { get; } Property Value Type Description Single | Improve this Doc View Source UnscaledTime If true, FOV kick will use unscaled delta time. Declaration public bool UnscaledTime { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source DoFOV(Boolean, Single) DOes the FOV kick. Declaration protected virtual void DoFOV(bool activate, float deltaTime) Parameters Type Name Description Boolean activate Determines if the kick is active or not. Single deltaTime | Improve this Doc View Source HandleFOV(Single) Runs the logic that applies the FOV kick in the right situations. Declaration protected virtual void HandleFOV(float deltaTime) Parameters Type Name Description Single deltaTime | Improve this Doc View Source OnInitialize() Declaration protected override void OnInitialize() Overrides PlayerModule.OnInitialize() | Improve this Doc View Source OnUpdate(Single) Declaration public override void OnUpdate(float deltaTime) Parameters Type Name Description Single deltaTime Overrides PlayerModule.OnUpdate(Single)"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerAnimator.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerAnimator.html",
    "title": "Class GoldPlayerAnimator | Gold Player",
    "keywords": "Class GoldPlayerAnimator Inheritance Object GoldPlayerAnimator Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public class GoldPlayerAnimator : MonoBehaviour Properties | Improve this Doc View Source Animator The target animator. Declaration public Animator Animator { get; set; } Property Value Type Description Animator | Improve this Doc View Source Crouching The Crouching parameter. Declaration public string Crouching { get; set; } Property Value Type Description String | Improve this Doc View Source EnableCrouching Determines if the Crouching parameter should be active. Declaration public bool EnableCrouching { get; set; } Property Value Type Description Boolean | Improve this Doc View Source EnableLookAngle Determines if the Look Angle parameter should be active. Declaration public bool EnableLookAngle { get; set; } Property Value Type Description Boolean | Improve this Doc View Source EnableMoveX Determines if the Move X parameter should be active. Declaration public bool EnableMoveX { get; set; } Property Value Type Description Boolean | Improve this Doc View Source EnableMoveY Determines if the Move Y parameter should be active. Declaration public bool EnableMoveY { get; set; } Property Value Type Description Boolean | Improve this Doc View Source LookAngle The Look Angle parameter. Declaration public string LookAngle { get; set; } Property Value Type Description String | Improve this Doc View Source LookAngleHead The transform to use for the look angle. If empty it will use Camera Head from Gold Player Controller. Declaration public Transform LookAngleHead { get; set; } Property Value Type Description Transform | Improve this Doc View Source MaxSpeed The max speed of your player to divide with. Declaration public float MaxSpeed { get; set; } Property Value Type Description Single | Improve this Doc View Source MoveX The Move X parameter. Declaration public string MoveX { get; set; } Property Value Type Description String | Improve this Doc View Source MoveY The Move Y parameter. Declaration public string MoveY { get; set; } Property Value Type Description String | Improve this Doc View Source UnscaledSmooth If true, the smoothing will use unscaled delta time. Declaration public bool UnscaledSmooth { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ValueSmoothTime Smooths out the value to make transitions between Move X/Y values. Declaration public float ValueSmoothTime { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source CalculateLookAngle() Declaration protected virtual void CalculateLookAngle() | Improve this Doc View Source CalculateVelocity() Figures out the velocity to set and assigns it to the animator. Declaration protected virtual void CalculateVelocity() | Improve this Doc View Source GetAnimatorHashes() Assigns all the hashes depending on their indexes. Declaration protected virtual void GetAnimatorHashes() | Improve this Doc View Source UpdateTargetLookAngle() Used to set the target for look angle. It will use the assigned camera head and if that isn't assigned it will use the one from the player controller. Declaration protected virtual void UpdateTargetLookAngle()"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerAnimatorParameterInfo.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerAnimatorParameterInfo.html",
    "title": "Struct GoldPlayerAnimatorParameterInfo | Gold Player",
    "keywords": "Struct GoldPlayerAnimatorParameterInfo Implements IEquatable < GoldPlayerAnimatorParameterInfo > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax [Serializable] public struct GoldPlayerAnimatorParameterInfo : IEquatable<GoldPlayerAnimatorParameterInfo> Constructors | Improve this Doc View Source GoldPlayerAnimatorParameterInfo(Int32, Boolean) Declaration public GoldPlayerAnimatorParameterInfo(int index, bool enabled) Parameters Type Name Description Int32 index Boolean enabled Fields | Improve this Doc View Source enabled Declaration public bool enabled Field Value Type Description Boolean | Improve this Doc View Source index Declaration public int index Field Value Type Description Int32 Methods | Improve this Doc View Source Equals(GoldPlayerAnimatorParameterInfo) Declaration public bool Equals(GoldPlayerAnimatorParameterInfo other) Parameters Type Name Description GoldPlayerAnimatorParameterInfo other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(GoldPlayerAnimatorParameterInfo, GoldPlayerAnimatorParameterInfo) Declaration public static bool operator ==(GoldPlayerAnimatorParameterInfo left, GoldPlayerAnimatorParameterInfo right) Parameters Type Name Description GoldPlayerAnimatorParameterInfo left GoldPlayerAnimatorParameterInfo right Returns Type Description Boolean | Improve this Doc View Source Inequality(GoldPlayerAnimatorParameterInfo, GoldPlayerAnimatorParameterInfo) Declaration public static bool operator !=(GoldPlayerAnimatorParameterInfo left, GoldPlayerAnimatorParameterInfo right) Parameters Type Name Description GoldPlayerAnimatorParameterInfo left GoldPlayerAnimatorParameterInfo right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerAudioAnimator.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerAudioAnimator.html",
    "title": "Class GoldPlayerAudioAnimator | Gold Player",
    "keywords": "Class GoldPlayerAudioAnimator Mainly used together with Gold Player Audio Animation Triggers to allow for an animation to trigger footstep sounds. Inheritance Object PlayerAudioBehaviour GoldPlayerAudioAnimator Inherited Members PlayerAudioBehaviour.PlayerController PlayerAudioBehaviour.PlayerInput PlayerAudioBehaviour.FootstepsSource PlayerAudioBehaviour.JumpSource PlayerAudioBehaviour.LandSource PlayerAudioBehaviour.IndependentAudioHandling PlayerAudioBehaviour.Initialize(GoldPlayerController, IGoldInput, AudioSource, AudioSource, AudioSource) PlayerAudioBehaviour.OnInitialized() PlayerAudioBehaviour.OnUpdate(Single) PlayerAudioBehaviour.OnFixedUpdate(Single) PlayerAudioBehaviour.OnLateUpdate(Single) Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public class GoldPlayerAudioAnimator : PlayerAudioBehaviour Methods | Improve this Doc View Source PlayFootstepSound() Declaration public override void PlayFootstepSound() Overrides PlayerAudioBehaviour.PlayFootstepSound() | Improve this Doc View Source PlayJumpSound() Declaration public override void PlayJumpSound() Overrides PlayerAudioBehaviour.PlayJumpSound() | Improve this Doc View Source PlayLandSound() Declaration public override void PlayLandSound() Overrides PlayerAudioBehaviour.PlayLandSound()"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerAudioAnimatorTriggers.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerAudioAnimatorTriggers.html",
    "title": "Class GoldPlayerAudioAnimatorTriggers | Gold Player",
    "keywords": "Class GoldPlayerAudioAnimatorTriggers Used together with any Gold Player Audio Behaviour to allow for an animation to trigger footstep sounds. Inheritance Object GoldPlayerAudioAnimatorTriggers Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public class GoldPlayerAudioAnimatorTriggers : MonoBehaviour Properties | Improve this Doc View Source AudioAnimator Declaration public PlayerAudioBehaviour AudioAnimator { get; } Property Value Type Description PlayerAudioBehaviour Methods | Improve this Doc View Source PlayFootstepSound() Declaration public void PlayFootstepSound() | Improve this Doc View Source PlayJumpSound() Declaration public void PlayJumpSound() | Improve this Doc View Source PlayLandSound() Declaration public void PlayLandSound()"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerController.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerController.html",
    "title": "Class GoldPlayerController | Gold Player",
    "keywords": "Class GoldPlayerController Inheritance Object GoldPlayerController Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public class GoldPlayerController : MonoBehaviour Fields | Improve this Doc View Source InitOnStart Declaration [NonSerialized] public bool InitOnStart Field Value Type Description Boolean | Improve this Doc View Source PlayerInput Declaration [NonSerialized] public IGoldInput PlayerInput Field Value Type Description IGoldInput Properties | Improve this Doc View Source Audio Everything related to audio (footsteps, landing and jumping). Declaration public PlayerAudio Audio { get; set; } Property Value Type Description PlayerAudio | Improve this Doc View Source Camera Everything related to the player camera (mouse movement). Declaration public PlayerCamera Camera { get; set; } Property Value Type Description PlayerCamera | Improve this Doc View Source Controller The character controller on the player. Declaration public CharacterController Controller { get; } Property Value Type Description CharacterController | Improve this Doc View Source HasBeenFullyInitialized True if all the modules have been initialized. Declaration public bool HasBeenFullyInitialized { get; } Property Value Type Description Boolean | Improve this Doc View Source HeadBob Everything related to the head bob. Declaration public PlayerBob HeadBob { get; set; } Property Value Type Description PlayerBob | Improve this Doc View Source Movement Everything related to movement. Declaration public PlayerMovement Movement { get; set; } Property Value Type Description PlayerMovement | Improve this Doc View Source UnscaledTime If true, Gold Player will use unscaled delta time. Declaration public bool UnscaledTime { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Velocity Declaration public Vector3 Velocity { get; } Property Value Type Description Vector3 Methods | Improve this Doc View Source FixedUpdate() Declaration public void FixedUpdate() | Improve this Doc View Source GetReferences() Gets all the references the player needs. Declaration public virtual void GetReferences() | Improve this Doc View Source Initialize() Initializes all the modules and sets the player up for use. Declaration public virtual void Initialize() | Improve this Doc View Source InitializeAudio() Initializes the audio module. Declaration public virtual void InitializeAudio() | Improve this Doc View Source InitializeCamera() Initializes the camera module. Declaration public virtual void InitializeCamera() | Improve this Doc View Source InitializeHeadBob() Initializes the head bob module. Declaration public virtual void InitializeHeadBob() | Improve this Doc View Source InitializeModules() Initializes all the modules. Declaration protected virtual void InitializeModules() | Improve this Doc View Source InitializeMovement() Initializes the movement module. Declaration public virtual void InitializeMovement() | Improve this Doc View Source LateUpdate() Declaration public void LateUpdate() | Improve this Doc View Source SetLocalPosition(Vector3) Sets the local position. Required because the character controller can stop 'transform.localPosition' from working. Declaration public void SetLocalPosition(Vector3 position) Parameters Type Name Description Vector3 position | Improve this Doc View Source SetPosition(Vector3) Sets the world position. Required because the character controller can stop 'transform.position' from working. Declaration public void SetPosition(Vector3 position) Parameters Type Name Description Vector3 position | Improve this Doc View Source SetPositionAndRotation(Vector3, Single) Declaration public void SetPositionAndRotation(Vector3 position, float yRotation) Parameters Type Name Description Vector3 position Single yRotation | Improve this Doc View Source SetRotation(Single) Declaration public void SetRotation(float yRotation) Parameters Type Name Description Single yRotation | Improve this Doc View Source Update() Declaration public void Update()"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerDelegates.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerDelegates.html",
    "title": "Class GoldPlayerDelegates | Gold Player",
    "keywords": "Class GoldPlayerDelegates Inheritance Object GoldPlayerDelegates Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public static class GoldPlayerDelegates"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerDelegates.JumpEvent.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerDelegates.JumpEvent.html",
    "title": "Delegate GoldPlayerDelegates.JumpEvent | Gold Player",
    "keywords": "Delegate GoldPlayerDelegates.JumpEvent Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public delegate void JumpEvent(float height); Parameters Type Name Description Single height"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerDelegates.LandEvent.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerDelegates.LandEvent.html",
    "title": "Delegate GoldPlayerDelegates.LandEvent | Gold Player",
    "keywords": "Delegate GoldPlayerDelegates.LandEvent Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public delegate void LandEvent(float fallHeight); Parameters Type Name Description Single fallHeight"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerDelegates.PlayerEvent.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerDelegates.PlayerEvent.html",
    "title": "Delegate GoldPlayerDelegates.PlayerEvent | Gold Player",
    "keywords": "Delegate GoldPlayerDelegates.PlayerEvent Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public delegate void PlayerEvent();"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerExtensions.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerExtensions.html",
    "title": "Class GoldPlayerExtensions | Gold Player",
    "keywords": "Class GoldPlayerExtensions Inheritance Object GoldPlayerExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public static class GoldPlayerExtensions Methods | Improve this Doc View Source IsNaN(Quaternion) Declaration public static bool IsNaN(this Quaternion q) Parameters Type Name Description Quaternion q Returns Type Description Boolean | Improve this Doc View Source IsNaN(Single) Declaration public static bool IsNaN(this float x) Parameters Type Name Description Single x Returns Type Description Boolean | Improve this Doc View Source IsNaN(Vector3) Declaration public static bool IsNaN(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Boolean"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerGraphics.GraphicsObject.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerGraphics.GraphicsObject.html",
    "title": "Struct GoldPlayerGraphics.GraphicsObject | Gold Player",
    "keywords": "Struct GoldPlayerGraphics.GraphicsObject Implements IEquatable < GoldPlayerGraphics.GraphicsObject > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax [Serializable] public struct GraphicsObject : IEquatable<GoldPlayerGraphics.GraphicsObject> Properties | Improve this Doc View Source IsParent If true, it will try to find child renderers of the parent target. Declaration public bool IsParent { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Target The target object to modify. Declaration public Transform Target { get; set; } Property Value Type Description Transform | Improve this Doc View Source WhenMyGraphics How the graphics are handled when 'Me' is the owner. Declaration public HandleGraphics WhenMyGraphics { get; set; } Property Value Type Description HandleGraphics | Improve this Doc View Source WhenOtherGraphics How the graphics are handled when 'Other' is the owner. Declaration public HandleGraphics WhenOtherGraphics { get; set; } Property Value Type Description HandleGraphics Methods | Improve this Doc View Source Equals(GoldPlayerGraphics.GraphicsObject) Declaration public bool Equals(GoldPlayerGraphics.GraphicsObject other) Parameters Type Name Description GoldPlayerGraphics.GraphicsObject other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(GoldPlayerGraphics.GraphicsObject, GoldPlayerGraphics.GraphicsObject) Declaration public static bool operator ==(GoldPlayerGraphics.GraphicsObject left, GoldPlayerGraphics.GraphicsObject right) Parameters Type Name Description GoldPlayerGraphics.GraphicsObject left GoldPlayerGraphics.GraphicsObject right Returns Type Description Boolean | Improve this Doc View Source Inequality(GoldPlayerGraphics.GraphicsObject, GoldPlayerGraphics.GraphicsObject) Declaration public static bool operator !=(GoldPlayerGraphics.GraphicsObject left, GoldPlayerGraphics.GraphicsObject right) Parameters Type Name Description GoldPlayerGraphics.GraphicsObject left GoldPlayerGraphics.GraphicsObject right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerGraphics.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerGraphics.html",
    "title": "Class GoldPlayerGraphics | Gold Player",
    "keywords": "Class GoldPlayerGraphics Inheritance Object GoldPlayerGraphics Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public class GoldPlayerGraphics : MonoBehaviour Properties | Improve this Doc View Source Objects Declaration public GoldPlayerGraphics.GraphicsObject[] Objects { get; set; } Property Value Type Description GoldPlayerGraphics.GraphicsObject [] | Improve this Doc View Source Owner Graphics are inivislbe for 'me' and visible for 'others'. Declaration public GraphicsOwner Owner { get; set; } Property Value Type Description GraphicsOwner"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerInput.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerInput.html",
    "title": "Class GoldPlayerInput | Gold Player",
    "keywords": "Class GoldPlayerInput Inheritance Object GoldPlayerInput Implements IGoldInput Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public class GoldPlayerInput : MonoBehaviour, IGoldInput Properties | Improve this Doc View Source AutoEnableInput If true, all actions will be enabled on start. Declaration public bool AutoEnableInput { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Inputs All the available inputs. Declaration public InputItem[] Inputs { get; set; } Property Value Type Description InputItem [] | Improve this Doc View Source UseKeyCodes Determines if the input should be based around KeyCodes. If false, Input Manager will be used. Declaration public bool UseKeyCodes { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source DisableAction(String) Declaration public void DisableAction(string action) Parameters Type Name Description String action | Improve this Doc View Source DisableInput() Declaration public void DisableInput() | Improve this Doc View Source EnableAction(String) Declaration public void EnableAction(string action) Parameters Type Name Description String action | Improve this Doc View Source EnableInput() Declaration public void EnableInput() | Improve this Doc View Source GetAxis(String) Returns the value of a axis. Declaration public float GetAxis(string axisName) Parameters Type Name Description String axisName The axis to check. Returns Type Description Single | Improve this Doc View Source GetAxisRaw(String) Returns the value of a axis with no processing applied. Declaration public float GetAxisRaw(string axisName) Parameters Type Name Description String axisName The axis to check. Returns Type Description Single | Improve this Doc View Source GetButton(String) Returns true while a button is being held down. Declaration public bool GetButton(string buttonName) Parameters Type Name Description String buttonName The button to check. Returns Type Description Boolean | Improve this Doc View Source GetButtonDown(String) Returns true if the button was pressed this frame. Declaration public bool GetButtonDown(string buttonName) Parameters Type Name Description String buttonName The button to check. Returns Type Description Boolean | Improve this Doc View Source GetButtonUp(String) Returns true if the button was released this frame. Declaration public bool GetButtonUp(string buttonName) Parameters Type Name Description String buttonName The button to check. Returns Type Description Boolean | Improve this Doc View Source GetItem(String, InputItem[]) Returns the Input Item that matches the buttonName in the given InputItem array. Declaration protected virtual InputItem GetItem(string buttonName, InputItem[] inputsArray) Parameters Type Name Description String buttonName The name of the item to try and find. InputItem [] inputsArray The array to search in to find the item. Returns Type Description InputItem | Improve this Doc View Source GetVector2(String) Not used on GoldPlayerInput. Declaration [Obsolete(\"GetVector2 will do nothing when using the legacy input manager.\")] public Vector2 GetVector2(string action) Parameters Type Name Description String action Returns Type Description Vector2 | Improve this Doc View Source UpdateInputs() Declaration public void UpdateInputs() Implements IGoldInput"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerInteractable.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerInteractable.html",
    "title": "Class GoldPlayerInteractable | Gold Player",
    "keywords": "Class GoldPlayerInteractable Inheritance Object GoldPlayerInteractable Implements IGoldPlayerInteractable Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public class GoldPlayerInteractable : MonoBehaviour, IGoldPlayerInteractable Properties | Improve this Doc View Source CanInteract Determines of the object can be interacted with. Takes the interaction limit into account. Declaration public bool CanInteract { get; } Property Value Type Description Boolean | Improve this Doc View Source CustomMessage A custom interaction message for UI elements. Declaration public string CustomMessage { get; set; } Property Value Type Description String | Improve this Doc View Source Interactions The amount of times this object has been interacted with. Declaration public int Interactions { get; set; } Property Value Type Description Int32 | Improve this Doc View Source IsHidden Determines if the object should be hidden. (Used for UI to not show a interaction message) Declaration public bool IsHidden { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsInteractable Determines if the object can be interacted with. Declaration public bool IsInteractable { get; set; } Property Value Type Description Boolean | Improve this Doc View Source LimitedInteractions If true, you can only interact with this object a certain amount of times. Declaration public bool LimitedInteractions { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaxInteractions The amount of times you can interact with this object. Declaration public int MaxInteractions { get; set; } Property Value Type Description Int32 | Improve this Doc View Source OnInteract Called when the object is interacted with. Declaration public GoldPlayerInteractable.InteractionEvent OnInteract { get; set; } Property Value Type Description GoldPlayerInteractable.InteractionEvent | Improve this Doc View Source OnReachedMaxInteractions Called when the object has reached it's max interactions. Declaration public GoldPlayerInteractable.InteractionEvent OnReachedMaxInteractions { get; set; } Property Value Type Description GoldPlayerInteractable.InteractionEvent | Improve this Doc View Source UseCustomMessage Determines if a custom interaction message should be shown. Declaration public bool UseCustomMessage { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Interact() Invokes the interact event. Declaration public void Interact() | Improve this Doc View Source Interact(Boolean, Boolean) Invokes the interact event. Declaration public void Interact(bool bypassIsInteractable, bool bypassLimit) Parameters Type Name Description Boolean bypassIsInteractable If true, it will ignore the Is Interactable property. Boolean bypassLimit If true, it will ignore the max limit property. Implements IGoldPlayerInteractable"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerInteractable.InteractionEvent.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerInteractable.InteractionEvent.html",
    "title": "Class GoldPlayerInteractable.InteractionEvent | Gold Player",
    "keywords": "Class GoldPlayerInteractable.InteractionEvent Inheritance Object GoldPlayerInteractable.InteractionEvent Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax [Serializable] public class InteractionEvent : UnityEvent"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerInteraction.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerInteraction.html",
    "title": "Class GoldPlayerInteraction | Gold Player",
    "keywords": "Class GoldPlayerInteraction Inheritance Object PlayerBehaviour GoldPlayerInteraction Inherited Members PlayerBehaviour.PlayerInput PlayerBehaviour.PlayerController PlayerBehaviour.GetButton(String) PlayerBehaviour.GetButtonDown(String) PlayerBehaviour.GetButtonUp(String) PlayerBehaviour.GetAxis(String) PlayerBehaviour.GetAxisRaw(String) PlayerBehaviour.GetVector2Input(String) Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public class GoldPlayerInteraction : PlayerBehaviour Fields | Improve this Doc View Source CanInteract Declaration [NonSerialized] public bool CanInteract Field Value Type Description Boolean | Improve this Doc View Source CurrentHitInteractable Declaration [NonSerialized] public IGoldPlayerInteractable CurrentHitInteractable Field Value Type Description IGoldPlayerInteractable Properties | Improve this Doc View Source CameraHead The player camera head. Declaration public Transform CameraHead { get; set; } Property Value Type Description Transform | Improve this Doc View Source IgnoreTriggers Determines if colliders marked as triggers should be detected. Declaration public bool IgnoreTriggers { get; set; } Property Value Type Description Boolean | Improve this Doc View Source InteractInput The input name for interaction to use. Declaration public string InteractInput { get; set; } Property Value Type Description String | Improve this Doc View Source InteractionLayer Sets the layers that the player can interact with. Declaration public LayerMask InteractionLayer { get; set; } Property Value Type Description LayerMask | Improve this Doc View Source InteractionRange Sets how far the interaction reach is. Declaration public float InteractionRange { get; set; } Property Value Type Description Single | Improve this Doc View Source InteractMessage A default message for UI elements to show when the player can interact. Declaration public string InteractMessage { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Awake() Declaration protected virtual void Awake() | Improve this Doc View Source DoInteraction() Declaration protected virtual void DoInteraction()"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerObjectBob.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerObjectBob.html",
    "title": "Class GoldPlayerObjectBob | Gold Player",
    "keywords": "Class GoldPlayerObjectBob Inheritance Object GoldPlayerObjectBob Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public class GoldPlayerObjectBob : MonoBehaviour Properties | Improve this Doc View Source Targets Declaration public BobClass[] Targets { get; set; } Property Value Type Description BobClass []"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerUI.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerUI.html",
    "title": "Class GoldPlayerUI | Gold Player",
    "keywords": "Class GoldPlayerUI Inheritance Object GoldPlayerUI Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public class GoldPlayerUI : MonoBehaviour Properties | Improve this Doc View Source AutoFindInteraction Declaration public bool AutoFindInteraction { get; set; } Property Value Type Description Boolean | Improve this Doc View Source AutoFindPlayer If true, the component will always attempt to find the player. If false, you will have to manually set the player. Declaration public bool AutoFindPlayer { get; set; } Property Value Type Description Boolean | Improve this Doc View Source DirectMaxFormat The format of the max stamina value. Declaration public string DirectMaxFormat { get; set; } Property Value Type Description String | Improve this Doc View Source DirectValueFormat The format of the current stamina value. Declaration public string DirectValueFormat { get; set; } Property Value Type Description String | Improve this Doc View Source InteractionBox The box/label that should be toggled when the player can interact. Declaration public GameObject InteractionBox { get; set; } Property Value Type Description GameObject | Improve this Doc View Source InteractionLabel The label for the interaction message. Declaration public Text InteractionLabel { get; set; } Property Value Type Description Text | Improve this Doc View Source PercentageFormat The format of the stamina percentage value. Declaration public string PercentageFormat { get; set; } Property Value Type Description String | Improve this Doc View Source Player The target player. Declaration public GoldPlayerController Player { get; set; } Property Value Type Description GoldPlayerController | Improve this Doc View Source PlayerInteraction Declaration protected GoldPlayerInteraction PlayerInteraction { get; set; } Property Value Type Description GoldPlayerInteraction | Improve this Doc View Source StaminaBarImage The progress bar as an image. Declaration public Image StaminaBarImage { get; set; } Property Value Type Description Image | Improve this Doc View Source StaminaBarSlider The progress bar as a slider. Declaration public Slider StaminaBarSlider { get; set; } Property Value Type Description Slider | Improve this Doc View Source StaminaBarType The type of progress bar that will be used. Declaration public GoldPlayerUI.ProgressBarType StaminaBarType { get; set; } Property Value Type Description GoldPlayerUI.ProgressBarType | Improve this Doc View Source StaminaLabel The label for showing player stamina. Declaration public Text StaminaLabel { get; set; } Property Value Type Description Text | Improve this Doc View Source StaminaLabelDisplay The type of display if there's a label. Declaration public GoldPlayerUI.LabelDisplayType StaminaLabelDisplay { get; set; } Property Value Type Description GoldPlayerUI.LabelDisplayType Methods | Improve this Doc View Source AdaptSprintingUI() Enables and disables sprinting UI elements based on how it's setup. Declaration public virtual void AdaptSprintingUI() | Improve this Doc View Source AwakePlayerInteraction() Declaration protected virtual void AwakePlayerInteraction() | Improve this Doc View Source AwakePlayerSprinting() Declaration protected virtual void AwakePlayerSprinting() | Improve this Doc View Source GetLabel(GoldPlayerUI.LabelDisplayType, Single, Single, String, String, String) Returns a formatted label based on the display type. Declaration protected virtual string GetLabel(GoldPlayerUI.LabelDisplayType displayType, float current, float max, string directValueFormat, string directMaxFormat, string percentageFormat) Parameters Type Name Description GoldPlayerUI.LabelDisplayType displayType Single current Single max String directValueFormat String directMaxFormat String percentageFormat Returns Type Description String | Improve this Doc View Source InteractionUpdate() Declaration protected virtual void InteractionUpdate() | Improve this Doc View Source OnAwake() Declaration protected virtual void OnAwake() | Improve this Doc View Source SprintingUpdate() Declaration protected virtual void SprintingUpdate()"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerUI.LabelDisplayType.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerUI.LabelDisplayType.html",
    "title": "Enum GoldPlayerUI.LabelDisplayType | Gold Player",
    "keywords": "Enum GoldPlayerUI.LabelDisplayType Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public enum LabelDisplayType Fields Name Description Direct Percentage"
  },
  "api/Hertzole.GoldPlayer.GoldPlayerUI.ProgressBarType.html": {
    "href": "api/Hertzole.GoldPlayer.GoldPlayerUI.ProgressBarType.html",
    "title": "Enum GoldPlayerUI.ProgressBarType | Gold Player",
    "keywords": "Enum GoldPlayerUI.ProgressBarType Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public enum ProgressBarType Fields Name Description Image Slider"
  },
  "api/Hertzole.GoldPlayer.GraphicsOwner.html": {
    "href": "api/Hertzole.GoldPlayer.GraphicsOwner.html",
    "title": "Enum GraphicsOwner | Gold Player",
    "keywords": "Enum GraphicsOwner Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public enum GraphicsOwner Fields Name Description Me Other"
  },
  "api/Hertzole.GoldPlayer.GroundCheckType.html": {
    "href": "api/Hertzole.GoldPlayer.GroundCheckType.html",
    "title": "Enum GroundCheckType | Gold Player",
    "keywords": "Enum GroundCheckType Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public enum GroundCheckType Fields Name Description Raycast Sphere"
  },
  "api/Hertzole.GoldPlayer.HandleGraphics.html": {
    "href": "api/Hertzole.GoldPlayer.HandleGraphics.html",
    "title": "Enum HandleGraphics | Gold Player",
    "keywords": "Enum HandleGraphics Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public enum HandleGraphics Fields Name Description DisableRenderers DisableTarget EnableRenderers EnableTarget ShawdosOnly"
  },
  "api/Hertzole.GoldPlayer.html": {
    "href": "api/Hertzole.GoldPlayer.html",
    "title": "Namespace Hertzole.GoldPlayer | Gold Player",
    "keywords": "Namespace Hertzole.GoldPlayer Classes BobClass FOVKickClass Used to apply field of view (FOV) kick to a target camera. GoldPlayerAnimator GoldPlayerAudioAnimator Mainly used together with Gold Player Audio Animation Triggers to allow for an animation to trigger footstep sounds. GoldPlayerAudioAnimatorTriggers Used together with any Gold Player Audio Behaviour to allow for an animation to trigger footstep sounds. GoldPlayerController GoldPlayerDelegates GoldPlayerExtensions GoldPlayerGraphics GoldPlayerInput GoldPlayerInteractable GoldPlayerInteractable.InteractionEvent GoldPlayerInteraction GoldPlayerObjectBob GoldPlayerUI MovingPlatformsClass PlayerAudio Used to apply audio to Gold Player. PlayerAudioBehaviour Used to make custom player audio behaviours. PlayerBehaviour Used for external player components that need to be a MonoBehaviour. Features some shortcuts in regard to the player. PlayerBob PlayerCamera Used to move a player camera around. PlayerModule PlayerMovement Used for movement related calculations. StaminaClass Used to calculate stamina/limited running. Structs AudioItem Used for easily playing audio clip(s) with parameters. GoldPlayerAnimatorParameterInfo GoldPlayerGraphics.GraphicsObject InputItem Used in Gold Player to make Input a little bit easier to handle. MovementSpeeds Interfaces IGoldInput IGoldPlayerInteractable Used to easily hook into the GoldPlayerInteraction component. It will target this interface. Enums AudioTypes CrouchToggleMode Type of toggling mode for crouching. GoldPlayerUI.LabelDisplayType GoldPlayerUI.ProgressBarType GraphicsOwner GroundCheckType HandleGraphics InputItem.InputType RunAction RunToggleMode Type of toggling mode for running. Delegates GoldPlayerDelegates.JumpEvent GoldPlayerDelegates.LandEvent GoldPlayerDelegates.PlayerEvent"
  },
  "api/Hertzole.GoldPlayer.IGoldInput.html": {
    "href": "api/Hertzole.GoldPlayer.IGoldInput.html",
    "title": "Interface IGoldInput | Gold Player",
    "keywords": "Interface IGoldInput Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public interface IGoldInput Methods | Improve this Doc View Source DisableAction(String) Disables a specific action. Declaration void DisableAction(string action) Parameters Type Name Description String action The action to disable. | Improve this Doc View Source DisableInput() Disables all actions. Declaration void DisableInput() | Improve this Doc View Source EnableAction(String) Enable a specific action. Declaration void EnableAction(string action) Parameters Type Name Description String action The action to enable. | Improve this Doc View Source EnableInput() Enables all actions. Declaration void EnableInput() | Improve this Doc View Source GetAxis(String) Returns the float value of an axis with some smoothing applied. Declaration float GetAxis(string axis) Parameters Type Name Description String axis Returns Type Description Single | Improve this Doc View Source GetAxisRaw(String) Returns the float value of an axis with no smoothing applied. Declaration float GetAxisRaw(string axis) Parameters Type Name Description String axis Returns Type Description Single | Improve this Doc View Source GetButton(String) Returns true if the button is being pressed. Declaration bool GetButton(string buttonName) Parameters Type Name Description String buttonName Returns Type Description Boolean | Improve this Doc View Source GetButtonDown(String) Return true if the button was pressed this frame. Declaration bool GetButtonDown(string buttonName) Parameters Type Name Description String buttonName Returns Type Description Boolean | Improve this Doc View Source GetButtonUp(String) Returns true if the button was released this frame. Declaration bool GetButtonUp(string buttoName) Parameters Type Name Description String buttoName Returns Type Description Boolean"
  },
  "api/Hertzole.GoldPlayer.IGoldPlayerInteractable.html": {
    "href": "api/Hertzole.GoldPlayer.IGoldPlayerInteractable.html",
    "title": "Interface IGoldPlayerInteractable | Gold Player",
    "keywords": "Interface IGoldPlayerInteractable Used to easily hook into the GoldPlayerInteraction component. It will target this interface. Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public interface IGoldPlayerInteractable Properties | Improve this Doc View Source CanInteract Determines if the object can be interacted with. Declaration bool CanInteract { get; } Property Value Type Description Boolean | Improve this Doc View Source CustomMessage The custom message to display. Declaration string CustomMessage { get; } Property Value Type Description String | Improve this Doc View Source IsHidden Determines if a interactable prompt should show up. Declaration bool IsHidden { get; } Property Value Type Description Boolean | Improve this Doc View Source UseCustomMessage Determines if the interactable should use a custom message. Declaration bool UseCustomMessage { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Interact() Invokes the interact event. Declaration void Interact()"
  },
  "api/Hertzole.GoldPlayer.InputItem.html": {
    "href": "api/Hertzole.GoldPlayer.InputItem.html",
    "title": "Struct InputItem | Gold Player",
    "keywords": "Struct InputItem Used in Gold Player to make Input a little bit easier to handle. Implements IEquatable < InputItem > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax [Serializable] public struct InputItem : IEquatable<InputItem> Constructors | Improve this Doc View Source InputItem(String, InputItem.InputType, String, String, KeyCode) Declaration public InputItem(string buttonName, InputItem.InputType type, string inputName, string inputNameSecondary, KeyCode key) Parameters Type Name Description String buttonName InputItem.InputType type String inputName String inputNameSecondary KeyCode key | Improve this Doc View Source InputItem(String, String, KeyCode) Declaration public InputItem(string buttonName, string inputName, KeyCode key) Parameters Type Name Description String buttonName String inputName KeyCode key | Improve this Doc View Source InputItem(String, String, String) Declaration public InputItem(string buttonName, string xAxis, string yAxis) Parameters Type Name Description String buttonName String xAxis String yAxis Properties | Improve this Doc View Source ButtonName The name code will reference the item with. Declaration public string ButtonName { get; set; } Property Value Type Description String | Improve this Doc View Source InputName The name in the Input Manager. Declaration public string InputName { get; set; } Property Value Type Description String | Improve this Doc View Source InputNameSecondary The second name in the Input Manager. This is only used for Vector2 values. Declaration public string InputNameSecondary { get; set; } Property Value Type Description String | Improve this Doc View Source Key The key code for the item. Declaration public KeyCode Key { get; set; } Property Value Type Description KeyCode | Improve this Doc View Source Type The type of input this will be. Declaration public InputItem.InputType Type { get; set; } Property Value Type Description InputItem.InputType Methods | Improve this Doc View Source Equals(InputItem) Declaration public bool Equals(InputItem other) Parameters Type Name Description InputItem other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(InputItem, InputItem) Declaration public static bool operator ==(InputItem left, InputItem right) Parameters Type Name Description InputItem left InputItem right Returns Type Description Boolean | Improve this Doc View Source Inequality(InputItem, InputItem) Declaration public static bool operator !=(InputItem left, InputItem right) Parameters Type Name Description InputItem left InputItem right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Hertzole.GoldPlayer.InputItem.InputType.html": {
    "href": "api/Hertzole.GoldPlayer.InputItem.InputType.html",
    "title": "Enum InputItem.InputType | Gold Player",
    "keywords": "Enum InputItem.InputType Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public enum InputType Fields Name Description Axis Button Vector2"
  },
  "api/Hertzole.GoldPlayer.MovementSpeeds.html": {
    "href": "api/Hertzole.GoldPlayer.MovementSpeeds.html",
    "title": "Struct MovementSpeeds | Gold Player",
    "keywords": "Struct MovementSpeeds Implements IEquatable < MovementSpeeds > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax [Serializable] public struct MovementSpeeds : IEquatable<MovementSpeeds> Constructors | Improve this Doc View Source MovementSpeeds(Single, Single, Single) Declaration public MovementSpeeds(float forwardSpeed, float sidewaysSpeed, float backwardsSpeed) Parameters Type Name Description Single forwardSpeed Single sidewaysSpeed Single backwardsSpeed Fields | Improve this Doc View Source Max Declaration [NonSerialized] public float Max Field Value Type Description Single Properties | Improve this Doc View Source BackwardsSpeed The speed when moving backwards. Declaration public float BackwardsSpeed { get; set; } Property Value Type Description Single | Improve this Doc View Source ForwardSpeed The speed when moving forward. Declaration public float ForwardSpeed { get; set; } Property Value Type Description Single | Improve this Doc View Source SidewaysSpeed The speed when moving sideways. Declaration public float SidewaysSpeed { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source CalculateMax() Calculates the max value out of all the speeds. Declaration public void CalculateMax() | Improve this Doc View Source Equals(MovementSpeeds) Declaration public bool Equals(MovementSpeeds other) Parameters Type Name Description MovementSpeeds other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(MovementSpeeds, MovementSpeeds) Declaration public static bool operator ==(MovementSpeeds left, MovementSpeeds right) Parameters Type Name Description MovementSpeeds left MovementSpeeds right Returns Type Description Boolean | Improve this Doc View Source Inequality(MovementSpeeds, MovementSpeeds) Declaration public static bool operator !=(MovementSpeeds left, MovementSpeeds right) Parameters Type Name Description MovementSpeeds left MovementSpeeds right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Hertzole.GoldPlayer.MovingPlatformsClass.html": {
    "href": "api/Hertzole.GoldPlayer.MovingPlatformsClass.html",
    "title": "Class MovingPlatformsClass | Gold Player",
    "keywords": "Class MovingPlatformsClass Inheritance Object PlayerModule MovingPlatformsClass Inherited Members PlayerModule.PlayerController PlayerModule.CharacterController PlayerModule.PlayerTransform PlayerModule.PlayerInput PlayerModule.HasBeenInitialized PlayerModule.Initialize(IGoldInput) PlayerModule.OnFixedUpdate(Single) PlayerModule.OnLateUpdate(Single) PlayerModule.GetButton(String) PlayerModule.GetButtonDown(String) PlayerModule.GetButtonUp(String) PlayerModule.GetAxis(String) PlayerModule.GetAxisRaw(String) PlayerModule.GetVector2Input(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax [Serializable] public class MovingPlatformsClass : PlayerModule Properties | Improve this Doc View Source DidPlatformMove Declaration public bool DidPlatformMove { get; } Property Value Type Description Boolean | Improve this Doc View Source Enabled Determines if support for moving platforms should be enabled. Declaration public bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsMoving Declaration public bool IsMoving { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxAngle Sets the max angle of the platforms the player can stand on. Declaration public float MaxAngle { get; set; } Property Value Type Description Single | Improve this Doc View Source MovePosition If enabled, the player will move with platforms. Declaration public bool MovePosition { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MoveRotation If enabled, the player will rotate with platforms. Declaration public bool MoveRotation { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source OnInitialize() Declaration protected override void OnInitialize() Overrides PlayerModule.OnInitialize() | Improve this Doc View Source OnUpdate(Single) Declaration public override void OnUpdate(float deltaTime) Parameters Type Name Description Single deltaTime Overrides PlayerModule.OnUpdate(Single) | Improve this Doc View Source UpdatePlatform(Single) Declaration protected virtual void UpdatePlatform(float deltaTime) Parameters Type Name Description Single deltaTime"
  },
  "api/Hertzole.GoldPlayer.PlayerAudio.html": {
    "href": "api/Hertzole.GoldPlayer.PlayerAudio.html",
    "title": "Class PlayerAudio | Gold Player",
    "keywords": "Class PlayerAudio Used to apply audio to Gold Player. Inheritance Object PlayerModule PlayerAudio Inherited Members PlayerModule.PlayerController PlayerModule.CharacterController PlayerModule.PlayerTransform PlayerModule.PlayerInput PlayerModule.HasBeenInitialized PlayerModule.Initialize(IGoldInput) PlayerModule.GetButton(String) PlayerModule.GetButtonDown(String) PlayerModule.GetButtonUp(String) PlayerModule.GetAxis(String) PlayerModule.GetAxisRaw(String) PlayerModule.GetVector2Input(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax [Serializable] public sealed class PlayerAudio : PlayerModule Properties | Improve this Doc View Source AudioType Sets how the audio will work. Custom will require a PlayerAudioBehaviour attached to the player. Declaration public AudioTypes AudioType { get; set; } Property Value Type Description AudioTypes | Improve this Doc View Source BasedOnHeadBob Determines if the audio should be based on head bob. Declaration public bool BasedOnHeadBob { get; set; } Property Value Type Description Boolean | Improve this Doc View Source CrouchFootsteps All the audio settings that plays when crouching. Declaration public AudioItem CrouchFootsteps { get; set; } Property Value Type Description AudioItem | Improve this Doc View Source EnableAudio Determines if any audio should be played. Declaration public bool EnableAudio { get; set; } Property Value Type Description Boolean | Improve this Doc View Source FootstepsSource The audio source where all the footsteps sounds will be played. Declaration public AudioSource FootstepsSource { get; set; } Property Value Type Description AudioSource | Improve this Doc View Source Jumping All the audio settings that plays when jumping. Declaration public AudioItem Jumping { get; set; } Property Value Type Description AudioItem | Improve this Doc View Source JumpSource The audio source where all the jump sounds will be played. Declaration public AudioSource JumpSource { get; set; } Property Value Type Description AudioSource | Improve this Doc View Source Landing All the audio settings that plays when landing. Declaration public AudioItem Landing { get; set; } Property Value Type Description AudioItem | Improve this Doc View Source LandSource The audio source where all the land sounds will be played. Declaration public AudioSource LandSource { get; set; } Property Value Type Description AudioSource | Improve this Doc View Source RunFootsteps All the audio settings that plays when running. Declaration public AudioItem RunFootsteps { get; set; } Property Value Type Description AudioItem | Improve this Doc View Source StepTime Sets how frequent the footsteps are. Declaration public float StepTime { get; set; } Property Value Type Description Single | Improve this Doc View Source UnscaledTime If true, audio will use unscaled delta time. Declaration public bool UnscaledTime { get; set; } Property Value Type Description Boolean | Improve this Doc View Source WalkFootsteps All the audio settings that plays when walking. Declaration public AudioItem WalkFootsteps { get; set; } Property Value Type Description AudioItem Methods | Improve this Doc View Source OnFixedUpdate(Single) Declaration public override void OnFixedUpdate(float fixedDeltaTime) Parameters Type Name Description Single fixedDeltaTime Overrides PlayerModule.OnFixedUpdate(Single) | Improve this Doc View Source OnInitialize() Declaration protected override void OnInitialize() Overrides PlayerModule.OnInitialize() | Improve this Doc View Source OnLateUpdate(Single) Declaration public override void OnLateUpdate(float deltaTime) Parameters Type Name Description Single deltaTime Overrides PlayerModule.OnLateUpdate(Single) | Improve this Doc View Source OnUpdate(Single) Declaration public override void OnUpdate(float deltaTime) Parameters Type Name Description Single deltaTime Overrides PlayerModule.OnUpdate(Single) | Improve this Doc View Source PlayFootstepSound() Plays a random footstep sound that adapts to sprinting and crouching. Declaration public void PlayFootstepSound() | Improve this Doc View Source PlayJumpSound() Plays a random jump sound. Declaration public void PlayJumpSound() | Improve this Doc View Source PlayLandSound() Plays a random land sound. Declaration public void PlayLandSound() | Improve this Doc View Source StopAllSounds() Stops all sounds from playing. Declaration public void StopAllSounds() | Improve this Doc View Source StopFootstepSound() Stops the current footstep sound for playing. Declaration public void StopFootstepSound() | Improve this Doc View Source StopJumpSound() Stops the current jump sound from playing. Declaration public void StopJumpSound() | Improve this Doc View Source StopLandSound() Stops the current land sound from playing. Declaration public void StopLandSound()"
  },
  "api/Hertzole.GoldPlayer.PlayerAudioBehaviour.html": {
    "href": "api/Hertzole.GoldPlayer.PlayerAudioBehaviour.html",
    "title": "Class PlayerAudioBehaviour | Gold Player",
    "keywords": "Class PlayerAudioBehaviour Used to make custom player audio behaviours. Inheritance Object PlayerAudioBehaviour GoldPlayerAudioAnimator Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public abstract class PlayerAudioBehaviour : MonoBehaviour Fields | Improve this Doc View Source FootstepsSource Declaration protected AudioSource FootstepsSource Field Value Type Description AudioSource | Improve this Doc View Source JumpSource Declaration protected AudioSource JumpSource Field Value Type Description AudioSource | Improve this Doc View Source LandSource Declaration protected AudioSource LandSource Field Value Type Description AudioSource | Improve this Doc View Source PlayerController Declaration protected GoldPlayerController PlayerController Field Value Type Description GoldPlayerController | Improve this Doc View Source PlayerInput Declaration protected IGoldInput PlayerInput Field Value Type Description IGoldInput Properties | Improve this Doc View Source IndependentAudioHandling If true, this will handle all the audio handling. Else the Player Audio module will handle it. Declaration public virtual bool IndependentAudioHandling { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Initialize(GoldPlayerController, IGoldInput, AudioSource, AudioSource, AudioSource) Initializes the audio behaviour. Declaration public void Initialize(GoldPlayerController playerController, IGoldInput input, AudioSource footstepsSource, AudioSource jumpSource, AudioSource landSource) Parameters Type Name Description GoldPlayerController playerController IGoldInput input AudioSource footstepsSource AudioSource jumpSource AudioSource landSource | Improve this Doc View Source OnFixedUpdate(Single) Called at every fixed framerate frame. Declaration public virtual void OnFixedUpdate(float fixedDeltaTime) Parameters Type Name Description Single fixedDeltaTime | Improve this Doc View Source OnInitialized() Called when the behaviour has been initialized. Declaration protected virtual void OnInitialized() | Improve this Doc View Source OnLateUpdate(Single) Called every frame, after OnUpdate. Declaration public virtual void OnLateUpdate(float deltaTime) Parameters Type Name Description Single deltaTime | Improve this Doc View Source OnUpdate(Single) Called every frame. Declaration public virtual void OnUpdate(float deltaTime) Parameters Type Name Description Single deltaTime | Improve this Doc View Source PlayFootstepSound() Called when a footstep should be played. Declaration public abstract void PlayFootstepSound() | Improve this Doc View Source PlayJumpSound() Called when a jump sound should be played. Declaration public abstract void PlayJumpSound() | Improve this Doc View Source PlayLandSound() Called when a land sound should be played. Declaration public abstract void PlayLandSound()"
  },
  "api/Hertzole.GoldPlayer.PlayerBehaviour.html": {
    "href": "api/Hertzole.GoldPlayer.PlayerBehaviour.html",
    "title": "Class PlayerBehaviour | Gold Player",
    "keywords": "Class PlayerBehaviour Used for external player components that need to be a MonoBehaviour. Features some shortcuts in regard to the player. Inheritance Object PlayerBehaviour GoldPlayerInteraction Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public abstract class PlayerBehaviour : MonoBehaviour Properties | Improve this Doc View Source PlayerController Player controller shortcut. It is not certain that this actually exists on the player! Declaration public GoldPlayerController PlayerController { get; } Property Value Type Description GoldPlayerController | Improve this Doc View Source PlayerInput Player input shortcut. Declaration protected IGoldInput PlayerInput { get; } Property Value Type Description IGoldInput Methods | Improve this Doc View Source GetAxis(String) Equivalent to Input's GetAxis function. Declaration protected float GetAxis(string axisName) Parameters Type Name Description String axisName The axis name you want to get. Returns Type Description Single | Improve this Doc View Source GetAxisRaw(String) Equivalent to Input's GetAxisRaw function. Declaration protected float GetAxisRaw(string axisName) Parameters Type Name Description String axisName The axis name you want to get. Returns Type Description Single | Improve this Doc View Source GetButton(String) Equivalent to Input's GetButton/GetKey function. Declaration protected bool GetButton(string buttonName) Parameters Type Name Description String buttonName The button name you want to get. Returns Type Description Boolean | Improve this Doc View Source GetButtonDown(String) Equivalent to Input's GetButtonDown/GetKeyDown function. Declaration protected bool GetButtonDown(string buttonName) Parameters Type Name Description String buttonName The button name you want to get. Returns Type Description Boolean | Improve this Doc View Source GetButtonUp(String) Equivalent to Input's GetButtonUp/GetKeyUp function. Declaration protected bool GetButtonUp(string buttonName) Parameters Type Name Description String buttonName The button name you want to get. Returns Type Description Boolean | Improve this Doc View Source GetVector2Input(String) Declaration protected Vector2 GetVector2Input(string action) Parameters Type Name Description String action Returns Type Description Vector2"
  },
  "api/Hertzole.GoldPlayer.PlayerBob.html": {
    "href": "api/Hertzole.GoldPlayer.PlayerBob.html",
    "title": "Class PlayerBob | Gold Player",
    "keywords": "Class PlayerBob Inheritance Object PlayerModule PlayerBob Inherited Members PlayerModule.PlayerController PlayerModule.CharacterController PlayerModule.PlayerTransform PlayerModule.PlayerInput PlayerModule.HasBeenInitialized PlayerModule.Initialize(IGoldInput) PlayerModule.OnFixedUpdate(Single) PlayerModule.OnLateUpdate(Single) PlayerModule.GetButton(String) PlayerModule.GetButtonDown(String) PlayerModule.GetButtonUp(String) PlayerModule.GetAxis(String) PlayerModule.GetAxisRaw(String) PlayerModule.GetVector2Input(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax [Serializable] public sealed class PlayerBob : PlayerModule Properties | Improve this Doc View Source BobCycle Declaration public float BobCycle { get; } Property Value Type Description Single | Improve this Doc View Source BobFrequency Sets how frequent the bob happens. Declaration public float BobFrequency { get; set; } Property Value Type Description Single | Improve this Doc View Source BobHeight The height of the bob. Declaration public float BobHeight { get; set; } Property Value Type Description Single | Improve this Doc View Source BobTarget The object to bob. Declaration public Transform BobTarget { get; set; } Property Value Type Description Transform | Improve this Doc View Source EnableBob Determines if the bob effect should be enabled. Declaration public bool EnableBob { get; set; } Property Value Type Description Boolean | Improve this Doc View Source EnableStrafeTilting If enabled, the target will tilt when strafing. Declaration public bool EnableStrafeTilting { get; set; } Property Value Type Description Boolean | Improve this Doc View Source HeightMultiplier Adds extra movement to the bob height. Declaration public float HeightMultiplier { get; set; } Property Value Type Description Single | Improve this Doc View Source LandMove How much the target will move when landing. Declaration public float LandMove { get; set; } Property Value Type Description Single | Improve this Doc View Source LandTilt How much the target will tilt when landing. Declaration public float LandTilt { get; set; } Property Value Type Description Single | Improve this Doc View Source SideMovement How much the target will move to the sides. Declaration public float SideMovement { get; set; } Property Value Type Description Single | Improve this Doc View Source StrafeTilt How much the target will tilt when strafing. Declaration public float StrafeTilt { get; set; } Property Value Type Description Single | Improve this Doc View Source StrideMultiplier Multiplies the bob frequency speed. Declaration public float StrideMultiplier { get; set; } Property Value Type Description Single | Improve this Doc View Source SwayAngle How much the target will sway from side to side. Declaration public float SwayAngle { get; set; } Property Value Type Description Single | Improve this Doc View Source UnscaledTime If true, bobbing will use unscaled delta time. Declaration public bool UnscaledTime { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source OnInitialize() Declaration protected override void OnInitialize() Overrides PlayerModule.OnInitialize() | Improve this Doc View Source OnUpdate(Single) Declaration public override void OnUpdate(float deltaTime) Parameters Type Name Description Single deltaTime Overrides PlayerModule.OnUpdate(Single)"
  },
  "api/Hertzole.GoldPlayer.PlayerCamera.html": {
    "href": "api/Hertzole.GoldPlayer.PlayerCamera.html",
    "title": "Class PlayerCamera | Gold Player",
    "keywords": "Class PlayerCamera Used to move a player camera around. Inheritance Object PlayerModule PlayerCamera Inherited Members PlayerModule.PlayerController PlayerModule.CharacterController PlayerModule.PlayerTransform PlayerModule.PlayerInput PlayerModule.HasBeenInitialized PlayerModule.Initialize(IGoldInput) PlayerModule.OnFixedUpdate(Single) PlayerModule.OnLateUpdate(Single) PlayerModule.GetButton(String) PlayerModule.GetButtonDown(String) PlayerModule.GetButtonUp(String) PlayerModule.GetAxis(String) PlayerModule.GetAxisRaw(String) PlayerModule.GetVector2Input(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax [Serializable] public sealed class PlayerCamera : PlayerModule Properties | Improve this Doc View Source BodyAngle The rotation of the body. Declaration public float BodyAngle { get; set; } Property Value Type Description Single | Improve this Doc View Source BodyForward The forward direction of the player. Declaration public Vector3 BodyForward { get; } Property Value Type Description Vector3 | Improve this Doc View Source CameraHead The camera head that should be moved around. Declaration public Transform CameraHead { get; set; } Property Value Type Description Transform | Improve this Doc View Source CanLookAround Determines if the player can look around. Declaration public bool CanLookAround { get; set; } Property Value Type Description Boolean | Improve this Doc View Source FieldOfViewKick Settings related to field of view kick. Declaration public FOVKickClass FieldOfViewKick { get; set; } Property Value Type Description FOVKickClass | Improve this Doc View Source FollowBodyAngles Where the body should be looking, smoothed. Declaration public Vector3 FollowBodyAngles { get; } Property Value Type Description Vector3 | Improve this Doc View Source FollowHeadAngles Where the head should be looking, smoothed. Declaration public Vector3 FollowHeadAngles { get; } Property Value Type Description Vector3 | Improve this Doc View Source InvertXAxis Determines if the X axis should be inverted. Declaration public bool InvertXAxis { get; set; } Property Value Type Description Boolean | Improve this Doc View Source InvertYAxis Determines if the Y axis should be inverted. Declaration public bool InvertYAxis { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsCameraShaking Is the camera currently shaking from a camera shake? Declaration public bool IsCameraShaking { get; } Property Value Type Description Boolean | Improve this Doc View Source LookInput Look action for the new Input System. Declaration public string LookInput { get; set; } Property Value Type Description String | Improve this Doc View Source MaximumX Sets how far up the player can look. Declaration public float MaximumX { get; set; } Property Value Type Description Single | Improve this Doc View Source MinimumX Sets how far down the player can look. Declaration public float MinimumX { get; set; } Property Value Type Description Single | Improve this Doc View Source MouseDamping Sets how smooth the movement should be. Declaration public float MouseDamping { get; set; } Property Value Type Description Single | Improve this Doc View Source MouseSensitivity How fast the camera head should move when looking around. Declaration public Vector2 MouseSensitivity { get; set; } Property Value Type Description Vector2 | Improve this Doc View Source RotateCameraOnly If true, the transform Y will not rotate and only the camera will rotate. Declaration public bool RotateCameraOnly { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ShouldLockCursor Determines if the cursor should be locked. Setting this will also (un)lock the cursor. Declaration public bool ShouldLockCursor { get; set; } Property Value Type Description Boolean | Improve this Doc View Source TargetBodyAngles Where the body should be looking. Declaration public Vector3 TargetBodyAngles { get; } Property Value Type Description Vector3 | Improve this Doc View Source TargetHeadAngles Where the head should be looking. Declaration public Vector3 TargetHeadAngles { get; } Property Value Type Description Vector3 Methods | Improve this Doc View Source ApplyRecoil(Single, Single) Applies a upward recoil to the camera and slowly moves it down. Declaration public void ApplyRecoil(float recoilAmount, float recoilTime) Parameters Type Name Description Single recoilAmount The amount of recoil. Single recoilTime The amount of time to \"fade out\" takes. | Improve this Doc View Source CameraShake(Single, Single, Single) Starts a camera shake. Declaration public void CameraShake(float frequency, float magnitude, float duration) Parameters Type Name Description Single frequency The frequency of the camera shake. Single magnitude The magnitude of the camera shake. Single duration The duration of the camera shake. | Improve this Doc View Source ForceLook(Transform, Single) Forces the player to look at a target. With a target assigned, it will move with the target. Declaration public void ForceLook(Transform target, float strength = 10F) Parameters Type Name Description Transform target The target to look at. Single strength The strength of the look. Set to 0 for instant. | Improve this Doc View Source ForceLook(Vector3, Single) Forces the player to look at a position. Declaration public void ForceLook(Vector3 point, float strength = 10F) Parameters Type Name Description Vector3 point The position to look at. Single strength The strength of the look. Set to 0 for instant. | Improve this Doc View Source LockCursor(Boolean) Locks/unlocks the cursor and makes it invisible/visible. Declaration public void LockCursor(bool lockCursor) Parameters Type Name Description Boolean lockCursor Should the cursor be locked? | Improve this Doc View Source OnInitialize() Declaration protected override void OnInitialize() Overrides PlayerModule.OnInitialize() | Improve this Doc View Source OnUpdate(Single) Declaration public override void OnUpdate(float deltaTime) Parameters Type Name Description Single deltaTime Overrides PlayerModule.OnUpdate(Single) | Improve this Doc View Source StopCameraShake() Stops the camera shake. Declaration public void StopCameraShake() | Improve this Doc View Source StopForceLooking() Stops the player from force looking. Declaration public void StopForceLooking() Events | Improve this Doc View Source OnBeginCameraShake Fires when the camera shake begins. Declaration public event GoldPlayerDelegates.PlayerEvent OnBeginCameraShake Event Type Type Description GoldPlayerDelegates.PlayerEvent | Improve this Doc View Source OnEndCameraShake Fires when the camera shake ends. Declaration public event GoldPlayerDelegates.PlayerEvent OnEndCameraShake Event Type Type Description GoldPlayerDelegates.PlayerEvent"
  },
  "api/Hertzole.GoldPlayer.PlayerModule.html": {
    "href": "api/Hertzole.GoldPlayer.PlayerModule.html",
    "title": "Class PlayerModule | Gold Player",
    "keywords": "Class PlayerModule Inheritance Object PlayerModule FOVKickClass MovingPlatformsClass PlayerAudio PlayerBob PlayerCamera PlayerMovement StaminaClass Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public class PlayerModule Fields | Improve this Doc View Source HasBeenInitialized Declaration [NonSerialized] public bool HasBeenInitialized Field Value Type Description Boolean | Improve this Doc View Source PlayerInput Declaration [NonSerialized] protected IGoldInput PlayerInput Field Value Type Description IGoldInput Properties | Improve this Doc View Source CharacterController Declaration public CharacterController CharacterController { get; } Property Value Type Description CharacterController | Improve this Doc View Source PlayerController Declaration public GoldPlayerController PlayerController { get; set; } Property Value Type Description GoldPlayerController | Improve this Doc View Source PlayerTransform Declaration public Transform PlayerTransform { get; } Property Value Type Description Transform Methods | Improve this Doc View Source GetAxis(String) Equivalent to Input's GetAxis function. Declaration protected float GetAxis(string axisName) Parameters Type Name Description String axisName The axis name you want to get. Returns Type Description Single | Improve this Doc View Source GetAxisRaw(String) Equivalent to Input's GetAxisRaw function. Declaration protected float GetAxisRaw(string axisName) Parameters Type Name Description String axisName The axis name you want to get. Returns Type Description Single | Improve this Doc View Source GetButton(String) Equivalent to Input's GetButton/GetKey function. Declaration protected bool GetButton(string buttonName) Parameters Type Name Description String buttonName The button name you want to get. Returns Type Description Boolean | Improve this Doc View Source GetButtonDown(String) Equivalent to Input's GetButtonDown/GetKeyDown function. Declaration protected bool GetButtonDown(string buttonName) Parameters Type Name Description String buttonName The button name you want to get. Returns Type Description Boolean | Improve this Doc View Source GetButtonUp(String) Equivalent to Input's GetButtonUp/GetKeyUp function. Declaration protected bool GetButtonUp(string buttonName) Parameters Type Name Description String buttonName The button name you want to get. Returns Type Description Boolean | Improve this Doc View Source GetVector2Input(String) Declaration protected Vector2 GetVector2Input(string action) Parameters Type Name Description String action Returns Type Description Vector2 | Improve this Doc View Source Initialize(IGoldInput) Initialize the module. Declaration public void Initialize(IGoldInput input) Parameters Type Name Description IGoldInput input Input, if available. | Improve this Doc View Source OnFixedUpdate(Single) Called in FixedUpdate. Declaration public virtual void OnFixedUpdate(float fixedDeltaTime) Parameters Type Name Description Single fixedDeltaTime | Improve this Doc View Source OnInitialize() Called when the module is initialized. Declaration protected virtual void OnInitialize() | Improve this Doc View Source OnLateUpdate(Single) Called in LateUpdate. Declaration public virtual void OnLateUpdate(float deltaTime) Parameters Type Name Description Single deltaTime | Improve this Doc View Source OnUpdate(Single) Called in Update. Declaration public virtual void OnUpdate(float deltaTime) Parameters Type Name Description Single deltaTime"
  },
  "api/Hertzole.GoldPlayer.PlayerMovement.html": {
    "href": "api/Hertzole.GoldPlayer.PlayerMovement.html",
    "title": "Class PlayerMovement | Gold Player",
    "keywords": "Class PlayerMovement Used for movement related calculations. Inheritance Object PlayerModule PlayerMovement Inherited Members PlayerModule.PlayerController PlayerModule.CharacterController PlayerModule.PlayerTransform PlayerModule.PlayerInput PlayerModule.HasBeenInitialized PlayerModule.Initialize(IGoldInput) PlayerModule.OnFixedUpdate(Single) PlayerModule.OnLateUpdate(Single) PlayerModule.GetButton(String) PlayerModule.GetButtonDown(String) PlayerModule.GetButtonUp(String) PlayerModule.GetAxis(String) PlayerModule.GetAxisRaw(String) PlayerModule.GetVector2Input(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax [Serializable] public sealed class PlayerMovement : PlayerModule Properties | Improve this Doc View Source Acceleration How long is takes for the player to reach top speed. Declaration public float Acceleration { get; set; } Property Value Type Description Single | Improve this Doc View Source AirControl How much control the player will have in the air. Declaration public float AirControl { get; set; } Property Value Type Description Single | Improve this Doc View Source AirJump Determines if the player can jump for some time when falling. Declaration public bool AirJump { get; set; } Property Value Type Description Boolean | Improve this Doc View Source AirJumpsAmount How many times the player can jump while in the air. Declaration public int AirJumpsAmount { get; set; } Property Value Type Description Int32 | Improve this Doc View Source AirJumpTime How long the player can be in the air and still jump. Declaration public float AirJumpTime { get; set; } Property Value Type Description Single | Improve this Doc View Source AllowAirJumpDirectionChange If true, the player can change direction when air jumping. Declaration public bool AllowAirJumpDirectionChange { get; set; } Property Value Type Description Boolean | Improve this Doc View Source CanCrouch Determines if the player can crouch. Declaration public bool CanCrouch { get; set; } Property Value Type Description Boolean | Improve this Doc View Source CanJump Determines if the player can jump. Declaration public bool CanJump { get; set; } Property Value Type Description Boolean | Improve this Doc View Source CanMoveAround Determines if the player can move at all. Declaration public bool CanMoveAround { get; set; } Property Value Type Description Boolean | Improve this Doc View Source CanRun Determines if the player can run. Declaration public bool CanRun { get; set; } Property Value Type Description Boolean | Improve this Doc View Source CanStandUp Can the player stand up while crouching? Declaration public bool CanStandUp { get; } Property Value Type Description Boolean | Improve this Doc View Source CrouchHeadLerp How fast the lerp for the head is when crouching/standing up. Declaration public float CrouchHeadLerp { get; set; } Property Value Type Description Single | Improve this Doc View Source CrouchHeight The height of the character controller when crouched. Declaration public float CrouchHeight { get; set; } Property Value Type Description Single | Improve this Doc View Source CrouchInput Crouch input action. Declaration public string CrouchInput { get; set; } Property Value Type Description String | Improve this Doc View Source CrouchJumping Determines if the player can jump while crouched. Declaration public bool CrouchJumping { get; set; } Property Value Type Description Boolean | Improve this Doc View Source CrouchSpeeds The movement speeds when crouching. Declaration public MovementSpeeds CrouchSpeeds { get; set; } Property Value Type Description MovementSpeeds | Improve this Doc View Source CrouchToggleMode Configuration of crouching as a toggle. Declaration public CrouchToggleMode CrouchToggleMode { get; set; } Property Value Type Description CrouchToggleMode | Improve this Doc View Source EnableGroundStick Determines if ground stick should be enabled. This would stop the player for bouncing down slopes. Declaration public bool EnableGroundStick { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Gravity Sets the gravity of the player. Declaration public float Gravity { get; set; } Property Value Type Description Single | Improve this Doc View Source GroundCheck The way the player will check if it's grounded. Declaration public GroundCheckType GroundCheck { get; set; } Property Value Type Description GroundCheckType | Improve this Doc View Source GroundLayer The layers the player will treat as ground. SHOULD NOT INCLUDE THE LAYER THE PLAYER IS ON! Declaration public LayerMask GroundLayer { get; set; } Property Value Type Description LayerMask | Improve this Doc View Source GroundStick Sets how much the player will stick to the ground. Declaration public float GroundStick { get; set; } Property Value Type Description Single | Improve this Doc View Source IsCrouching Is the player crouching? Declaration public bool IsCrouching { get; } Property Value Type Description Boolean | Improve this Doc View Source IsFalling Is the player falling? Declaration public bool IsFalling { get; } Property Value Type Description Boolean | Improve this Doc View Source IsGrounded Is the player grounded? Declaration public bool IsGrounded { get; } Property Value Type Description Boolean | Improve this Doc View Source IsJumping Is the player jumping? Declaration public bool IsJumping { get; } Property Value Type Description Boolean | Improve this Doc View Source IsMoving Is the player moving at all? Declaration public bool IsMoving { get; } Property Value Type Description Boolean | Improve this Doc View Source IsRunning Is the player running? NOTE: This is true when move speed is above walk speed, not just when the run button is held down. Declaration public bool IsRunning { get; } Property Value Type Description Boolean | Improve this Doc View Source JumpHeight The height the player can jump in Unity units. Declaration public float JumpHeight { get; set; } Property Value Type Description Single | Improve this Doc View Source JumpHeightMultiplier Multiplies the current jump height. Declaration public float JumpHeightMultiplier { get; set; } Property Value Type Description Single | Improve this Doc View Source JumpingRequiresStamina If stamina is enabled and this is true, jumping will require some stamina. Declaration public bool JumpingRequiresStamina { get; set; } Property Value Type Description Boolean | Improve this Doc View Source JumpInput Jump input action. Declaration public string JumpInput { get; set; } Property Value Type Description String | Improve this Doc View Source JumpStaminaCost How much stamina that jumping will take away. Declaration public float JumpStaminaCost { get; set; } Property Value Type Description Single | Improve this Doc View Source JumpStaminaRequire How much stamina that is required to jump. Declaration public float JumpStaminaRequire { get; set; } Property Value Type Description Single | Improve this Doc View Source MoveInput Move action for the new Input System. Declaration public string MoveInput { get; set; } Property Value Type Description String | Improve this Doc View Source MovementInput Raw input values for movement on the X and Z axis. Declaration public Vector2 MovementInput { get; set; } Property Value Type Description Vector2 | Improve this Doc View Source MoveSpeedMultiplier Multiplies the current move speed. Declaration public float MoveSpeedMultiplier { get; set; } Property Value Type Description Single | Improve this Doc View Source MovingPlatforms Everything related to moving platforms. Declaration public MovingPlatformsClass MovingPlatforms { get; set; } Property Value Type Description MovingPlatformsClass | Improve this Doc View Source RayAmount The amount of rays to use for ground checking. Declaration public int RayAmount { get; set; } Property Value Type Description Int32 | Improve this Doc View Source RayHeight How high up the rays will be when using ray ground checking. Declaration public float RayHeight { get; set; } Property Value Type Description Single | Improve this Doc View Source RayLength How far down the rays will reach when using ray ground checking. Declaration public float RayLength { get; set; } Property Value Type Description Single | Improve this Doc View Source RunInput Run input action. Declaration public string RunInput { get; set; } Property Value Type Description String | Improve this Doc View Source RunSpeeds The speeds when running. Declaration public MovementSpeeds RunSpeeds { get; set; } Property Value Type Description MovementSpeeds | Improve this Doc View Source RunToggleMode Configuration of running as a toggle. Declaration public RunToggleMode RunToggleMode { get; set; } Property Value Type Description RunToggleMode | Improve this Doc View Source ShouldCrouch Should the player crouch? Declaration public bool ShouldCrouch { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ShouldJump Should the player try to jump? Declaration public bool ShouldJump { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ShouldRun Should the player run? Declaration public bool ShouldRun { get; set; } Property Value Type Description Boolean | Improve this Doc View Source SmoothedMovementInput Input values for movement on the X and Z axis, automatically dampened for smoothing. Declaration public Vector2 SmoothedMovementInput { get; set; } Property Value Type Description Vector2 | Improve this Doc View Source Stamina Everything related to stamina (limited running). Declaration public StaminaClass Stamina { get; set; } Property Value Type Description StaminaClass | Improve this Doc View Source UnscaledTime If true, movement will use unscaled delta time. Declaration public bool UnscaledTime { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Velocity The current velocity of the player. Declaration public Vector3 Velocity { get; } Property Value Type Description Vector3 | Improve this Doc View Source WalkingSpeeds The speeds when walking. Declaration public MovementSpeeds WalkingSpeeds { get; set; } Property Value Type Description MovementSpeeds Methods | Improve this Doc View Source AddForce(Vector3, Single) Applies force to the player. Declaration public void AddForce(Vector3 direction, float force) Parameters Type Name Description Vector3 direction The direction of the force. Single force Force multiplier. | Improve this Doc View Source CheckGrounded() Updates the \"isGrounded\" value and also returns if the player is grounded. Declaration public bool CheckGrounded() Returns Type Description Boolean Is the player grounded? | Improve this Doc View Source CreateGroundCheckRayCircle(ref Vector3[], Vector3, Single) Creates a circle of ray positions around the player's base. Declaration public void CreateGroundCheckRayCircle(ref Vector3[] rays, Vector3 origin, float radius) Parameters Type Name Description Vector3 [] rays The array to fill. Vector3 origin The origin point to create the circle around. Single radius The radius of the circle. | Improve this Doc View Source GetInput(Single) Updates the movement input values and also returns the current user input. Declaration public Vector2 GetInput(float deltaTime) Parameters Type Name Description Single deltaTime Returns Type Description Vector2 | Improve this Doc View Source OnInitialize() Declaration protected override void OnInitialize() Overrides PlayerModule.OnInitialize() | Improve this Doc View Source OnUpdate(Single) Called every frame. Declaration public override void OnUpdate(float deltaTime) Parameters Type Name Description Single deltaTime Overrides PlayerModule.OnUpdate(Single) Events | Improve this Doc View Source OnBeginCrouch Fires when the player begins crouching. Declaration public event GoldPlayerDelegates.PlayerEvent OnBeginCrouch Event Type Type Description GoldPlayerDelegates.PlayerEvent | Improve this Doc View Source OnBeginRun Fires when the player begins running. Declaration public event GoldPlayerDelegates.PlayerEvent OnBeginRun Event Type Type Description GoldPlayerDelegates.PlayerEvent | Improve this Doc View Source OnEndCrouch Fires when the player stops crouching. Declaration public event GoldPlayerDelegates.PlayerEvent OnEndCrouch Event Type Type Description GoldPlayerDelegates.PlayerEvent | Improve this Doc View Source OnEndRun Fires when the player stops running. Declaration public event GoldPlayerDelegates.PlayerEvent OnEndRun Event Type Type Description GoldPlayerDelegates.PlayerEvent | Improve this Doc View Source OnJump Fires when the player jumps. Declaration public event GoldPlayerDelegates.JumpEvent OnJump Event Type Type Description GoldPlayerDelegates.JumpEvent | Improve this Doc View Source OnLand Fires when the player lands. Declaration public event GoldPlayerDelegates.LandEvent OnLand Event Type Type Description GoldPlayerDelegates.LandEvent"
  },
  "api/Hertzole.GoldPlayer.RunAction.html": {
    "href": "api/Hertzole.GoldPlayer.RunAction.html",
    "title": "Enum RunAction | Gold Player",
    "keywords": "Enum RunAction Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax [Flags] public enum RunAction Fields Name Description IsRunning None PressingRun"
  },
  "api/Hertzole.GoldPlayer.RunToggleMode.html": {
    "href": "api/Hertzole.GoldPlayer.RunToggleMode.html",
    "title": "Enum RunToggleMode | Gold Player",
    "keywords": "Enum RunToggleMode Type of toggling mode for running. Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax public enum RunToggleMode Fields Name Description Hold Toggle is off and run button must be held down to run. Toggle Running is permanently toggled. Player must press run button again to toggle off. UntilNoInput Running is toggled on until the player presses the run button again OR there is no movement input from the player."
  },
  "api/Hertzole.GoldPlayer.StaminaClass.html": {
    "href": "api/Hertzole.GoldPlayer.StaminaClass.html",
    "title": "Class StaminaClass | Gold Player",
    "keywords": "Class StaminaClass Used to calculate stamina/limited running. Inheritance Object PlayerModule StaminaClass Inherited Members PlayerModule.PlayerController PlayerModule.CharacterController PlayerModule.PlayerTransform PlayerModule.PlayerInput PlayerModule.HasBeenInitialized PlayerModule.Initialize(IGoldInput) PlayerModule.OnFixedUpdate(Single) PlayerModule.OnLateUpdate(Single) PlayerModule.GetButton(String) PlayerModule.GetButtonDown(String) PlayerModule.GetButtonUp(String) PlayerModule.GetAxis(String) PlayerModule.GetAxisRaw(String) PlayerModule.GetVector2Input(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Hertzole.GoldPlayer Assembly : Hertzole.GoldPlayer.dll Syntax [Serializable] public class StaminaClass : PlayerModule Properties | Improve this Doc View Source CurrentRegenWait The current regen wait time. Declaration public float CurrentRegenWait { get; set; } Property Value Type Description Single | Improve this Doc View Source CurrentStamina The current amount of stamina. Declaration public float CurrentStamina { get; set; } Property Value Type Description Single | Improve this Doc View Source DrainRate How much stamina will be drained per second. Declaration public float DrainRate { get; set; } Property Value Type Description Single | Improve this Doc View Source DrainStaminaWhen Sets when the stamina should be drained. Declaration public RunAction DrainStaminaWhen { get; set; } Property Value Type Description RunAction | Improve this Doc View Source EnableStamina Determines if stamina should be enabled. Declaration public bool EnableStamina { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaxStamina The maximum amount of stamina. Declaration public float MaxStamina { get; set; } Property Value Type Description Single | Improve this Doc View Source RegenRateMoving \"How much stamina will regenerate per second when moving. Declaration public float RegenRateMoving { get; set; } Property Value Type Description Single | Improve this Doc View Source RegenRateStill \"How much stamina will regenerate per second when standing still. Declaration public float RegenRateStill { get; set; } Property Value Type Description Single | Improve this Doc View Source RegenWait How long it will wait before starting to regenerate stamina. Declaration public float RegenWait { get; set; } Property Value Type Description Single | Improve this Doc View Source StillThreshold The threshold where it counts if the player is standing still. Declaration public float StillThreshold { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source ClampValues() Clamps current stamina and current regen wait. Declaration protected virtual void ClampValues() | Improve this Doc View Source DrainStamina(Single) Drains the stamina. Declaration protected virtual void DrainStamina(float deltaTime) Parameters Type Name Description Single deltaTime | Improve this Doc View Source HandleStamina(Single) Handles all the stamina logic. Declaration protected virtual void HandleStamina(float deltaTime) Parameters Type Name Description Single deltaTime | Improve this Doc View Source OnInitialize() Declaration protected override void OnInitialize() Overrides PlayerModule.OnInitialize() | Improve this Doc View Source OnUpdate(Single) Declaration public override void OnUpdate(float deltaTime) Parameters Type Name Description Single deltaTime Overrides PlayerModule.OnUpdate(Single) | Improve this Doc View Source RegenStamina(Single) Does the stamina regeneration logic. Declaration protected virtual void RegenStamina(float deltaTime) Parameters Type Name Description Single deltaTime"
  },
  "articles/Components/index.html": {
    "href": "articles/Components/index.html",
    "title": "Gold Player Controller | Gold Player",
    "keywords": "Gold Player Controller TODO"
  },
  "articles/Components/input.html": {
    "href": "articles/Components/input.html",
    "title": "Gold Player Input | Gold Player",
    "keywords": "Gold Player Input TODO"
  },
  "articles/Components/input_system.html": {
    "href": "articles/Components/input_system.html",
    "title": "Gold Player Input System | Gold Player",
    "keywords": "Gold Player Input System TODO"
  },
  "articles/General/index.html": {
    "href": "articles/General/index.html",
    "title": "General | Gold Player",
    "keywords": "General"
  },
  "articles/General/multiplayer.html": {
    "href": "articles/General/multiplayer.html",
    "title": "Multiplayer | Gold Player",
    "keywords": "Multiplayer"
  },
  "index.html": {
    "href": "index.html",
    "title": "Gold Player | Gold Player",
    "keywords": "Gold Player"
  }
}